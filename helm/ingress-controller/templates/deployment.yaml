apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    control-plane: controller-manager
  name: ngrok-ingress-controller-controller-manager
  namespace: {{ .Release.Namespace }}
spec:
  replicas:
  selector:
    matchLabels:
      control-plane: controller-manager
  template:
    metadata:
      annotations:
        kubectl.kubernetes.io/default-container: manager
      labels:
        control-plane: controller-manager
    spec:
      serviceAccountName: ngrok-ingress-controller-controller-manager
      volumes:
      - name: scripts
        configMap:
          name: scripts
          defaultMode: 0755
      containers:
      - name: manager
        image: {{ .Values.image.repository }}:{{ .Values.image.tag }}
        imagePullPolicy: Never
        command:
        - /manager
        args:
        - --health-probe-bind-address=:8081
        - --metrics-bind-address=127.0.0.1:8080
        - --leader-elect
        securityContext:
          allowPrivilegeEscalation: false
        env:
        - name: NGROK_API_KEY
          valueFrom:
            secretKeyRef:
              key: API_KEY
              name: ngrok-ingress-controller-credentials
        livenessProbe:
          httpGet:
            path: /healthz
            port: 8081
          initialDelaySeconds: 15
          periodSeconds: 20
        readinessProbe:
          httpGet:
            path: /readyz
            port: 8081
          initialDelaySeconds: 5
          periodSeconds: 10
        resources:
          limits:
            cpu: 500m
            memory: 128Mi
          requests:
            cpu: 10m
            memory: 64Mi
      - name: ngrok-cli
        image: ngrok/ngrok:3
        command:
        - ''
        args:
        - ./scripts/gen-agent-config.sh
        envFrom:
        - configMapRef:
            name: ngrok-ingress-controller-cm
            optional: true
        env:
        - name: NGROK_AUTHTOKEN
          valueFrom:
            secretKeyRef:
              key: AUTHTOKEN
              name: ngrok-ingress-controller-credentials
        volumeMounts:
          - name: scripts
            mountPath: /scripts
            readOnly: true
      - name: ngrok-cli-debug
        image: ubuntu
        command:
        - /bin/sh
        args:
        - -c
        - sleep infinity
        env:
        - name: NGROK_AUTHTOKEN
          valueFrom:
            secretKeyRef:
              key: AUTHTOKEN
              name: ngrok-ingress-controller-credentials
      - name: kube-rbac-proxy
        image: gcr.io/kubebuilder/kube-rbac-proxy:v0.8.0
        args:
        - --secure-listen-address=0.0.0.0:8443
        - --upstream=http://127.0.0.1:8080/
        - --logtostderr=true
        - --v=0
        ports:
        - containerPort: 8443
          name: https
          protocol: TCP
        resources:
          limits:
            cpu: 500m
            memory: 128Mi
          requests:
            cpu: 5m
            memory: 64Mi
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: scripts
data:
{{ (.Files.Glob "scripts/gen-agent-config.sh").AsConfig | indent 2 }}
